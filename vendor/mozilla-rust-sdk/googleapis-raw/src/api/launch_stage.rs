// This file is generated by rust-protobuf 2.22.0. Do not edit
// @generated

// https://github.com/rust-lang/rust-clippy/issues/702
#![allow(unknown_lints)]
#![allow(clippy::all)]

#![allow(unused_attributes)]
#![rustfmt::skip]

#![allow(box_pointers)]
#![allow(dead_code)]
#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
#![allow(trivial_casts)]
#![allow(unused_imports)]
#![allow(unused_results)]
//! Generated file from `google/api/launch_stage.proto`

/// Generated files are compatible only with the same version
/// of protobuf runtime.
// const _PROTOBUF_VERSION_CHECK: () = ::protobuf::VERSION_2_22_0;

#[derive(Clone,PartialEq,Eq,Debug,Hash)]
pub enum LaunchStage {
    LAUNCH_STAGE_UNSPECIFIED = 0,
    UNIMPLEMENTED = 6,
    PRELAUNCH = 7,
    EARLY_ACCESS = 1,
    ALPHA = 2,
    BETA = 3,
    GA = 4,
    DEPRECATED = 5,
}

impl ::protobuf::ProtobufEnum for LaunchStage {
    fn value(&self) -> i32 {
        *self as i32
    }

    fn from_i32(value: i32) -> ::std::option::Option<LaunchStage> {
        match value {
            0 => ::std::option::Option::Some(LaunchStage::LAUNCH_STAGE_UNSPECIFIED),
            6 => ::std::option::Option::Some(LaunchStage::UNIMPLEMENTED),
            7 => ::std::option::Option::Some(LaunchStage::PRELAUNCH),
            1 => ::std::option::Option::Some(LaunchStage::EARLY_ACCESS),
            2 => ::std::option::Option::Some(LaunchStage::ALPHA),
            3 => ::std::option::Option::Some(LaunchStage::BETA),
            4 => ::std::option::Option::Some(LaunchStage::GA),
            5 => ::std::option::Option::Some(LaunchStage::DEPRECATED),
            _ => ::std::option::Option::None
        }
    }

    fn values() -> &'static [Self] {
        static values: &'static [LaunchStage] = &[
            LaunchStage::LAUNCH_STAGE_UNSPECIFIED,
            LaunchStage::UNIMPLEMENTED,
            LaunchStage::PRELAUNCH,
            LaunchStage::EARLY_ACCESS,
            LaunchStage::ALPHA,
            LaunchStage::BETA,
            LaunchStage::GA,
            LaunchStage::DEPRECATED,
        ];
        values
    }

    fn enum_descriptor_static() -> &'static ::protobuf::reflect::EnumDescriptor {
        static descriptor: ::protobuf::rt::LazyV2<::protobuf::reflect::EnumDescriptor> = ::protobuf::rt::LazyV2::INIT;
        descriptor.get(|| {
            ::protobuf::reflect::EnumDescriptor::new_pb_name::<LaunchStage>("LaunchStage", file_descriptor_proto())
        })
    }
}

impl ::std::marker::Copy for LaunchStage {
}

impl ::std::default::Default for LaunchStage {
    fn default() -> Self {
        LaunchStage::LAUNCH_STAGE_UNSPECIFIED
    }
}

impl ::protobuf::reflect::ProtobufValue for LaunchStage {
    fn as_ref(&self) -> ::protobuf::reflect::ReflectValueRef {
        ::protobuf::reflect::ReflectValueRef::Enum(::protobuf::ProtobufEnum::descriptor(self))
    }
}

static file_descriptor_proto_data: &'static [u8] = b"\
    \n\x1dgoogle/api/launch_stage.proto\x12\ngoogle.api*\x8c\x01\n\x0bLaunch\
    Stage\x12\x1c\n\x18LAUNCH_STAGE_UNSPECIFIED\x10\0\x12\x11\n\rUNIMPLEMENT\
    ED\x10\x06\x12\r\n\tPRELAUNCH\x10\x07\x12\x10\n\x0cEARLY_ACCESS\x10\x01\
    \x12\t\n\x05ALPHA\x10\x02\x12\x08\n\x04BETA\x10\x03\x12\x06\n\x02GA\x10\
    \x04\x12\x0e\n\nDEPRECATED\x10\x05BZ\n\x0ecom.google.apiB\x10LaunchStage\
    ProtoP\x01Z-google.golang.org/genproto/googleapis/api;api\xa2\x02\x04GAP\
    IJ\xc7\x17\n\x06\x12\x04\x0e\0G\x01\n\xbc\x04\n\x01\x0c\x12\x03\x0e\0\
    \x122\xb1\x04\x20Copyright\x202020\x20Google\x20LLC\n\n\x20Licensed\x20u\
    nder\x20the\x20Apache\x20License,\x20Version\x202.0\x20(the\x20\"License\
    \");\n\x20you\x20may\x20not\x20use\x20this\x20file\x20except\x20in\x20co\
    mpliance\x20with\x20the\x20License.\n\x20You\x20may\x20obtain\x20a\x20co\
    py\x20of\x20the\x20License\x20at\n\n\x20\x20\x20\x20\x20http://www.apach\
    e.org/licenses/LICENSE-2.0\n\n\x20Unless\x20required\x20by\x20applicable\
    \x20law\x20or\x20agreed\x20to\x20in\x20writing,\x20software\n\x20distrib\
    uted\x20under\x20the\x20License\x20is\x20distributed\x20on\x20an\x20\"AS\
    \x20IS\"\x20BASIS,\n\x20WITHOUT\x20WARRANTIES\x20OR\x20CONDITIONS\x20OF\
    \x20ANY\x20KIND,\x20either\x20express\x20or\x20implied.\n\x20See\x20the\
    \x20License\x20for\x20the\x20specific\x20language\x20governing\x20permis\
    sions\x20and\n\x20limitations\x20under\x20the\x20License.\n\n\x08\n\x01\
    \x02\x12\x03\x10\0\x13\n\x08\n\x01\x08\x12\x03\x12\0D\n\t\n\x02\x08\x0b\
    \x12\x03\x12\0D\n\x08\n\x01\x08\x12\x03\x13\0\"\n\t\n\x02\x08\n\x12\x03\
    \x13\0\"\n\x08\n\x01\x08\x12\x03\x14\01\n\t\n\x02\x08\x08\x12\x03\x14\01\
    \n\x08\n\x01\x08\x12\x03\x15\0'\n\t\n\x02\x08\x01\x12\x03\x15\0'\n\x08\n\
    \x01\x08\x12\x03\x16\0\"\n\t\n\x02\x08$\x12\x03\x16\0\"\n\x81\x01\n\x02\
    \x05\0\x12\x04\x1a\0G\x01\x1au\x20The\x20launch\x20stage\x20as\x20define\
    d\x20by\x20[Google\x20Cloud\x20Platform\n\x20Launch\x20Stages](http://cl\
    oud.google.com/terms/launch-stages).\n\n\n\n\x03\x05\0\x01\x12\x03\x1a\
    \x05\x10\n-\n\x04\x05\0\x02\0\x12\x03\x1c\x02\x1f\x1a\x20\x20Do\x20not\
    \x20use\x20this\x20default\x20value.\n\n\x0c\n\x05\x05\0\x02\0\x01\x12\
    \x03\x1c\x02\x1a\n\x0c\n\x05\x05\0\x02\0\x02\x12\x03\x1c\x1d\x1e\nH\n\
    \x04\x05\0\x02\x01\x12\x03\x1f\x02\x14\x1a;\x20The\x20feature\x20is\x20n\
    ot\x20yet\x20implemented.\x20Users\x20can\x20not\x20use\x20it.\n\n\x0c\n\
    \x05\x05\0\x02\x01\x01\x12\x03\x1f\x02\x0f\n\x0c\n\x05\x05\0\x02\x01\x02\
    \x12\x03\x1f\x12\x13\nX\n\x04\x05\0\x02\x02\x12\x03\"\x02\x10\x1aK\x20Pr\
    elaunch\x20features\x20are\x20hidden\x20from\x20users\x20and\x20are\x20o\
    nly\x20visible\x20internally.\n\n\x0c\n\x05\x05\0\x02\x02\x01\x12\x03\"\
    \x02\x0b\n\x0c\n\x05\x05\0\x02\x02\x02\x12\x03\"\x0e\x0f\n\xc5\x02\n\x04\
    \x05\0\x02\x03\x12\x03)\x02\x13\x1a\xb7\x02\x20Early\x20Access\x20featur\
    es\x20are\x20limited\x20to\x20a\x20closed\x20group\x20of\x20testers.\x20\
    To\x20use\n\x20these\x20features,\x20you\x20must\x20sign\x20up\x20in\x20\
    advance\x20and\x20sign\x20a\x20Trusted\x20Tester\n\x20agreement\x20(whic\
    h\x20includes\x20confidentiality\x20provisions).\x20These\x20features\
    \x20may\n\x20be\x20unstable,\x20changed\x20in\x20backward-incompatible\
    \x20ways,\x20and\x20are\x20not\n\x20guaranteed\x20to\x20be\x20released.\
    \n\n\x0c\n\x05\x05\0\x02\x03\x01\x12\x03)\x02\x0e\n\x0c\n\x05\x05\0\x02\
    \x03\x02\x12\x03)\x11\x12\n\xed\x04\n\x04\x05\0\x02\x04\x12\x034\x02\x0c\
    \x1a\xdf\x04\x20Alpha\x20is\x20a\x20limited\x20availability\x20test\x20f\
    or\x20releases\x20before\x20they\x20are\x20cleared\n\x20for\x20widesprea\
    d\x20use.\x20By\x20Alpha,\x20all\x20significant\x20design\x20issues\x20a\
    re\x20resolved\n\x20and\x20we\x20are\x20in\x20the\x20process\x20of\x20ve\
    rifying\x20functionality.\x20Alpha\x20customers\n\x20need\x20to\x20apply\
    \x20for\x20access,\x20agree\x20to\x20applicable\x20terms,\x20and\x20have\
    \x20their\n\x20projects\x20allowlisted.\x20Alpha\x20releases\x20don\xe2\
    \x80\x99t\x20have\x20to\x20be\x20feature\x20complete,\n\x20no\x20SLAs\
    \x20are\x20provided,\x20and\x20there\x20are\x20no\x20technical\x20suppor\
    t\x20obligations,\x20but\n\x20they\x20will\x20be\x20far\x20enough\x20alo\
    ng\x20that\x20customers\x20can\x20actually\x20use\x20them\x20in\n\x20tes\
    t\x20environments\x20or\x20for\x20limited-use\x20tests\x20--\x20just\x20\
    like\x20they\x20would\x20in\n\x20normal\x20production\x20cases.\n\n\x0c\
    \n\x05\x05\0\x02\x04\x01\x12\x034\x02\x07\n\x0c\n\x05\x05\0\x02\x04\x02\
    \x12\x034\n\x0b\n\xc9\x02\n\x04\x05\0\x02\x05\x12\x03;\x02\x0b\x1a\xbb\
    \x02\x20Beta\x20is\x20the\x20point\x20at\x20which\x20we\x20are\x20ready\
    \x20to\x20open\x20a\x20release\x20for\x20any\n\x20customer\x20to\x20use.\
    \x20There\x20are\x20no\x20SLA\x20or\x20technical\x20support\x20obligatio\
    ns\x20in\x20a\n\x20Beta\x20release.\x20Products\x20will\x20be\x20complet\
    e\x20from\x20a\x20feature\x20perspective,\x20but\n\x20may\x20have\x20som\
    e\x20open\x20outstanding\x20issues.\x20Beta\x20releases\x20are\x20suitab\
    le\x20for\n\x20limited\x20production\x20use\x20cases.\n\n\x0c\n\x05\x05\
    \0\x02\x05\x01\x12\x03;\x02\x06\n\x0c\n\x05\x05\0\x02\x05\x02\x12\x03;\t\
    \n\nx\n\x04\x05\0\x02\x06\x12\x03?\x02\t\x1ak\x20GA\x20features\x20are\
    \x20open\x20to\x20all\x20developers\x20and\x20are\x20considered\x20stabl\
    e\x20and\n\x20fully\x20qualified\x20for\x20production\x20use.\n\n\x0c\n\
    \x05\x05\0\x02\x06\x01\x12\x03?\x02\x04\n\x0c\n\x05\x05\0\x02\x06\x02\
    \x12\x03?\x07\x08\n\xc9\x02\n\x04\x05\0\x02\x07\x12\x03F\x02\x11\x1a\xbb\
    \x02\x20Deprecated\x20features\x20are\x20scheduled\x20to\x20be\x20shut\
    \x20down\x20and\x20removed.\x20For\x20more\n\x20information,\x20see\x20t\
    he\x20\xe2\x80\x9cDeprecation\x20Policy\xe2\x80\x9d\x20section\x20of\x20\
    our\x20[Terms\x20of\n\x20Service](https://cloud.google.com/terms/)\n\x20\
    and\x20the\x20[Google\x20Cloud\x20Platform\x20Subject\x20to\x20the\x20De\
    precation\n\x20Policy](https://cloud.google.com/terms/deprecation)\x20do\
    cumentation.\n\n\x0c\n\x05\x05\0\x02\x07\x01\x12\x03F\x02\x0c\n\x0c\n\
    \x05\x05\0\x02\x07\x02\x12\x03F\x0f\x10b\x06proto3\
";

static file_descriptor_proto_lazy: ::protobuf::rt::LazyV2<::protobuf::descriptor::FileDescriptorProto> = ::protobuf::rt::LazyV2::INIT;

fn parse_descriptor_proto() -> ::protobuf::descriptor::FileDescriptorProto {
    ::protobuf::Message::parse_from_bytes(file_descriptor_proto_data).unwrap()
}

pub fn file_descriptor_proto() -> &'static ::protobuf::descriptor::FileDescriptorProto {
    file_descriptor_proto_lazy.get(|| {
        parse_descriptor_proto()
    })
}
